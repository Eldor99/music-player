{"version":3,"sources":["components/Player.jsx","components/Song.jsx","components/LibrarySong.jsx","components/Library.jsx","components/Nav.jsx","data.js","App.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","audio","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","console","log","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6850a38.chunk.js","sourcesContent":["import Raect from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n  // Event Handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[currentIndex - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  // Add styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import Raect from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img alt={currentSong.name} src={currentSong.cover}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import Raect from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    // Add active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    // check if song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img alt={song.name} src={song.cover}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            id={song.id}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Musics</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import {\r\n    v4 as uuidv4\r\n} from 'uuid';\r\n\r\nfunction chillHop() {\r\n    return [{\r\n            name: 'There and Back',\r\n            cover: 'https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg',\r\n            artist: 'Shopan',\r\n            id: uuidv4(),\r\n            active: true,\r\n            color: ['#C8B1C5', '#275564'],\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10311'\r\n        },\r\n        {\r\n            name: 'You and I',\r\n            cover: 'https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg',\r\n            artist: 'melodiesinfonie',\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#C8B1C5', '#275564'],\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10339'\r\n        },\r\n        {\r\n            name: 'Frozen Time',\r\n            cover: 'https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg',\r\n            artist: 'Kendall Milles',\r\n            id: uuidv4(),\r\n            active: false,\r\n            color: ['#C8B1C5', '#275564'],\r\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10329'\r\n        }\r\n\r\n    ]\r\n}\r\n\r\nexport default chillHop;","import React, { useState, useRef } from \"react\";\n// Import styles\nimport \"./styles/App.scss\";\n// Import components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n// Import utils\nimport data from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // Calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n    console.log(animationPercentage);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}